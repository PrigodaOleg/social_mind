// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: const String.fromEnvironment('CLOSERS_WEB_API_KEY'),
    appId: const String.fromEnvironment('CLOSERS_WEB_APP_ID'),
    messagingSenderId: const String.fromEnvironment('CLOSERS_PROJECT_NUMBER'),
    projectId: const String.fromEnvironment('CLOSERS_PROJECT_ID'),
    authDomain: '${const String.fromEnvironment('CLOSERS_PROJECT_ID')}.firebaseapp.com',
    databaseURL: const String.fromEnvironment('CLOSERS_DATABASE_URL'),
    storageBucket: '${const String.fromEnvironment('CLOSERS_PROJECT_ID')}.appspot.com',
    measurementId: const String.fromEnvironment('CLOSERS_WEB_MEASUREMENT_ID'),
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: const String.fromEnvironment('CLOSERS_ANDROID_API_KEY'),
    appId: const String.fromEnvironment('CLOSERS_ANDROID_APP_ID'),
    messagingSenderId: const String.fromEnvironment('CLOSERS_PROJECT_NUMBER'),
    projectId: const String.fromEnvironment('CLOSERS_PROJECT_ID'),
    databaseURL: const String.fromEnvironment('CLOSERS_DATABASE_URL'),
    storageBucket: '${const String.fromEnvironment('CLOSERS_PROJECT_ID')}.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: const String.fromEnvironment('CLOSERS_IOS_API_KEY'),
    appId: const String.fromEnvironment('CLOSERS_IOS_APP_ID'),
    messagingSenderId: const String.fromEnvironment('CLOSERS_PROJECT_NUMBER'),
    projectId: const String.fromEnvironment('CLOSERS_PROJECT_ID'),
    databaseURL: const String.fromEnvironment('CLOSERS_DATABASE_URL'),
    storageBucket: '${const String.fromEnvironment('CLOSERS_PROJECT_ID')}.appspot.com',
    iosBundleId: 'com.example.client',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: const String.fromEnvironment('CLOSERS_MACOS_API_KEY'),
    appId: const String.fromEnvironment('CLOSERS_MACOS_APP_ID'),
    messagingSenderId: const String.fromEnvironment('CLOSERS_PROJECT_NUMBER'),
    projectId: const String.fromEnvironment('CLOSERS_PROJECT_ID'),
    databaseURL: const String.fromEnvironment('CLOSERS_DATABASE_URL'),
    storageBucket: '${const String.fromEnvironment('CLOSERS_PROJECT_ID')}.appspot.com',
    iosBundleId: 'com.example.client',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: const String.fromEnvironment('CLOSERS_WINDOWS_API_KEY'),
    appId: const String.fromEnvironment('CLOSERS_WINDOWS_APP_ID'),
    messagingSenderId: const String.fromEnvironment('CLOSERS_PROJECT_NUMBER'),
    projectId: const String.fromEnvironment('CLOSERS_PROJECT_ID'),
    authDomain: '${const String.fromEnvironment('CLOSERS_PROJECT_ID')}.firebaseapp.com',
    databaseURL: const String.fromEnvironment('CLOSERS_DATABASE_URL'),
    storageBucket: '${const String.fromEnvironment('CLOSERS_PROJECT_ID')}.appspot.com',
    measurementId: const String.fromEnvironment('CLOSERS_WINDOWS_MEASUREMENT_ID'),
  );

}