# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Closers Flutter

on:
  push:
    branches: [ "main" ]
    paths: [ "domains/client/**" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "domains/client/**" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: 'Set up JDK 12'
        uses: 'actions/setup-java@v1'
        with:
          java-version: '12.x'
        # Set up JDK 12 using the "actions/setup-java" action.

      - name: Set up Flutter
        uses: subosito/flutter-action@v2

      - name: Install dependencies
        working-directory: ./domains/client
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        working-directory: ./domains/client
        run: flutter analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      # - name: Run tests
      #   working-directory: ./domains/client
      #   run: flutter test

      - name: Generate google-services.json
        working-directory: ./domains/client
        run: echo '{"project_info":{"project_number":"${{ secrets.CLOSERS_PROJECT_NUMBER }}","project_id":"${{ secrets.CLOSERS_PROJECT_ID }}","storage_bucket":"${{ secrets.CLOSERS_PROJECT_ID }}.appspot.com"},"client":[{"client_info":{"mobilesdk_app_id":"${{ secrets.CLOSERS_ANDROID_APP_ID }}","android_client_info":{"package_name":"com.example.client"}},"oauth_client":[],"api_key":[{"current_key":"${{ secrets.CLOSERS_ANDROID_API_KEY }}"}],"services":{"appinvite_service":{"other_platform_oauth_client":[]}}}],"configuration_version":"1"}' >> android/app/google-services.json

      - name: 'Build APK'
        working-directory: ./domains/client
        id: 'build'
        run: |
          'flutter build apk \
          --split-per-abi \
          --dart-define CLOSERS_PROJECT_ID=${{ secrets.CLOSERS_PROJECT_ID }} \
          --dart-define CLOSERS_PROJECT_NUMBER=${{ secrets.CLOSERS_PROJECT_NUMBER }} \
          --dart-define CLOSERS_ANDROID_API_KEY=${{ secrets.CLOSERS_ANDROID_API_KEY }} \
          --dart-define CLOSERS_ANDROID_APP_ID=${{ secrets.CLOSERS_ANDROID_APP_ID }}

      - name: 'Upload APK'
        uses: 'actions/upload-artifact@v2'
        with:
          name: 'Closers'
          path: './domains/client/build/app/outputs/flutter-apk/'
        # Upload the built APK
